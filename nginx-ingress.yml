---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: node-app
  name: node-app
spec:
  containers:
  - image: 274314838444.dkr.ecr.eu-west-3.amazonaws.com/demo:{{IMAGE_TAG}}
    name: node-app
    resources: {}
    env:
    - name: CLIENT_ID
      value: "nodejs-app"
    - name: TOPIC
      value: "test"
    - name: BROKERS
      value: "b-3.demo-cluster-kafka-clu.k62rs7.c2.kafka.eu-west-3.amazonaws.com:9092,b-1.demo-cluster-kafka-clu.k62rs7.c2.kafka.eu-west-3.amazonaws.com:9092,b-2.demo-cluster-kafka-clu.k62rs7.c2.kafka.eu-west-3.amazonaws.com:9092"
  dnsPolicy: ClusterFirst
  restartPolicy: Never
status: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    eks.amazonaws.com/fargate-profile: fp-default
    run: node-app
  name: node-app
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    eks.amazonaws.com/fargate-profile: fp-default
    run: node-app
status:
  loadBalancer: {}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-node-app
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: node-app
              servicePort: 80
